{
	"info": {
		"_postman_id": "cc8a4ab3-d182-475a-820a-d34de4043646",
		"name": "CAI Negative Reports",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "gettingSessionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ca73344-9627-44f6-9fc5-5556fc6c8eda",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"console.log(JSON.stringify(jsonData.results))",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"sessionID\", jsonData.sessionId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{Url}}/api/v2/session/authenticateUsernamePassword?username={{username}}&password={{password}}",
							"host": [
								"{{Url}}"
							],
							"path": [
								"api",
								"v2",
								"session",
								"authenticateUsernamePassword"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Conversation Etiquette",
			"item": [
				{
					"name": "Talking v. Listening",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9c9e31a0-89c7-4549-9974-f2ff7d993b2b",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7ef405e7-4688-4cca-87db-b3e4550185fe",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "sessionId",
												"value": "{{sessionID}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-talking-listening-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}",
													"disabled": true
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-talking-listening-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5f7e1b9b-e9a6-4e4c-b6dc-11b4be06431c",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2e92c7a5-28cc-4255-969d-70500ae373cb",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "170cf16a-d269-4dc7-bee5-0f347047b8a4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a472823b-ff83-43d7-aee1-52af9e6ff97f",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-talking-listening-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-talking-listening-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3f1f0ae4-f531-48a3-8532-20e3ce66764f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "47acf43e-9df7-4c54-aa59-f68e473fbdad",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C2954127 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "439d37e0-3e5d-4918-8e64-f76b034ad91f",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c4898da0-88ba-43a1-836b-829270d6972d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-talking-listening-org&createdAt=past7days%7E&&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-talking-listening-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": null,
													"value": null
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc86039f-a49e-484c-bdf1-a8b694b24529",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954128 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "de1949e7-2510-4924-bd6e-2c21f1ba98ac",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4c7c47bb-82f8-4e70-a4d9-9a22951e1e1f",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ddbac3bc-7326-4b2e-bc68-d77e4b016484",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-talking-listening-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-talking-listening-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4175cecf-18bc-4913-bdf1-58093d66e2de",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954129 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4bd45202-3d17-4cdd-aafc-a694dc7dcb1b",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API ",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9bcce5b0-7820-4bfc-b513-aa83f71d8d9e",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f090e479-4f4d-4980-a41e-d8c0f5ca2b81",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=etiquette-talking-listening-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-talking-listening-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "qweeq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "79ab3f6f-5112-4f9b-93a8-a25ae5254de8",
												"exec": [
													"pm.test(\"C3122000 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f13366be-2fed-4e16-896b-07c8cafec2b5",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7d5fd524-e06c-4d42-9c4d-038936045186",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8f97d7b4-b50b-43d9-a4ac-247f86d8fc6e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Silence",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fd7ea750-e55e-456f-a7e1-4ead6873b473",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3840e4f0-7c88-42d7-98a9-04517840d0b0",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-silence-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-silence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "81ef33d0-488a-4781-a464-b055946874b6",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "852c455d-b416-4831-a194-bfd80b3e825a",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6265f989-6cb3-48b5-92c5-06dcbf1f975c",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "23008244-066e-4202-af7c-98b2698200c5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-silence-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-silence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d6618c81-17f6-4670-a965-8f3ee83ff658",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C2954143 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9a801257-5d89-4401-b4bf-012a3b2c2fbe",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "de202efc-651f-41a4-bfdd-593ec95d0637",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b9cd5d56-197c-4b79-ad54-359aabb93a90",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-silence-org&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-silence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36d6af38-6d27-42e6-bed6-977d86251542",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954145 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c1044ee1-233a-4cd9-897a-b6567fe48416",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fb2a080d-3226-40f7-a1b3-f52f2f7c0aa6",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1a4f2139-7d93-4fae-a419-3e9f68031795",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-silence-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-silence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df60ba0d-3267-46da-b40d-524499a7f818",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954144 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9f1a0ec3-b31e-4f68-b1de-e3a88c895091",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account  Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "43abfeb4-fa0b-48d4-aa23-ef4cda4bf74c",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a4db76a2-86d6-41e3-b8b2-ba66124c3217",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=etiquette-silence-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-silence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "qweeq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d560c4ee-187b-4bc5-8891-0e1d2c46ad54",
												"exec": [
													"pm.test(\"C2954142 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "af5b20a7-cb07-4a2a-904b-12b363bb6993",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Interactions",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "67717ea7-a586-42a0-848e-921218554d9a",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1b0ad546-0e84-467c-a5cf-68e84ab912d8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=etiquette-interruptions-agent&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-agent"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "35044309-091a-43d2-9d83-ad3a6fab0d34",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bf04948e-4f04-4609-8bf4-a3d05f3d0bed",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e75e5a0b-36dd-43c3-bf51-795cae129d30",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5a1c7971-a41a-4975-b71a-64184b5491cb",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=etiquette-interruptions-agent&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-agent"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cdb1199c-90f9-4bae-98e2-f7a08c037789",
												"exec": [
													"pm.test(\"C3019555 Pass Incorrect UserName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "96aeecf6-0130-4137-8903-90120a1820a9",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "09ccea6a-8441-4207-a358-aa0965ed31ab",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2dd05b33-9368-4f0d-9781-8737d3352619",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%&managementLevel=%&createdAt=past7days%7E&name=etiquette-interruptions-agent&teamName%5B%5D={{invalidTeamName}}&agentName=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-agent"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "agentName",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f09d5731-3109-4df1-8ee6-b83d99dae623",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954148 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "056bd947-8942-46c1-8a7c-938be21ededf",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f8a11107-b1bc-4cde-aa35-ed4a61047eae",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dcfa0823-2971-434f-9499-676f27e5039d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-interruptions-agent&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}&agentName=%&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-agent"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44d30bf2-7e31-4c51-822f-bec702600d6e",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954146 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "46493adb-57d5-4d46-b49a-acaea1c6924f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account  Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "bfaf1479-e12b-4f4e-b84f-c2c63e6367b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e8cefacb-f39b-495c-a47f-0c4c58cd0d22",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=etiquette-interruptions-agent&createdAt=past7days%7E&agentName=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-agent"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "%",
													"disabled": true
												},
												{
													"key": "agentName",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecac046d-cc53-4e00-9709-6e082814a628",
												"exec": [
													"pm.test(\"C2954149 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2bd044e9-5c30-4c8d-9450-600c1d32efb7",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Customer Monologues",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9a48b562-6abf-45b4-b0fa-75a8edb1986f",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5a2847dd-d00c-4925-988d-b3fc1053dead",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-customer-monologues-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-customer-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "507e6f51-6e46-4cb2-a9f8-f8b84299ce9e",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e6818780-d677-49cc-b1ff-7ae30652ca16",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fbd2a8ea-c1ac-482d-b61f-167858d56d3e",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7991fe26-d828-420e-ada7-f84e758930b6",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-customer-monologues-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-customer-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b6b7d405-bb4a-458f-9978-9d9a4fff6786",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C2954139 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f54060b0-2f01-43db-ad2d-6e7a598f6b4c",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "20202823-4cb6-4e91-b615-fd9af5cb6339",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0e82dd78-896d-41cc-9e08-1dfc3493c6c1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&createdAt=past7days%7E&name=etiquette-customer-monologues-org&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "name",
													"value": "etiquette-customer-monologues-org"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ec2d65d6-9c14-4492-89db-9325159931d0",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954140 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cf2842a1-55e2-43ac-ae85-4e3213942294",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8e80a7af-592e-4ae2-a2e2-69bc3e372565",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6a1a01cb-548d-4130-8df1-baaa3b450198",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-customer-monologues-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-customer-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1a7cb03-0e40-4cfe-ad4e-516f839a266a",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954141 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "17d0a842-4280-4246-b7fd-69cf4ad96559",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account  Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f786df0d-9cc6-4c6a-b1dc-b2ba9d236647",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9e044c06-6eea-4d75-8070-56049f618ed1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=etiquette-customer-monologues-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-customer-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5c04543c-9bd3-4cb5-826e-f994aefe064f",
												"exec": [
													"pm.test(\"C2954138 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "89fdd2e5-f7d0-42e2-8b05-6469c2b0ad7e",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Interruptions",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "be2822bd-a777-4cf7-b9a9-e3106e1665f9",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3ec47916-1cdd-41a9-b45f-9dc190b7ae6f",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-interruptions-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f527e3bf-7c55-4bca-9f72-14a0869dfe85",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e06e45f1-b97b-4109-a005-20101db3483f",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "adffca00-bc13-4657-8f97-65555f331b84",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "363ead75-b026-4ccc-b530-f3bfa3a2c199",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-interruptions-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "92137d90-4eac-4e92-b798-ecd49859a4da",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C2954131 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "02893536-1572-4bef-bebc-3ac9877afdb1",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cd38841b-a94d-485b-af52-9524bc60978e",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3534ac34-6d0f-4b7a-a176-fdb796b6d05c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&createdAt=past7days%7E&name=etiquette-interruptions-org&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-org"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43f06f52-77bc-46d8-be86-6368f99c78bb",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954132 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6837c008-ac42-4e66-b0f9-97238ecfbe9f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "df4aa06d-857f-4e97-a8ab-8c5c6adee092",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "be04f32d-f1c6-4021-b26b-01a23a2cad87",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-interruptions-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c4aee78-3358-427b-8d38-1d30525255da",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954133 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bed9735d-80c8-40d9-aebd-d6bc60dab543",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API ",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cc69ebf6-8567-487e-b63d-82f2ce2000bf",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a4f44323-8503-4e5b-a9cb-12deecaafd0f",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=etiquette-interruptions-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-interruptions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "qweeq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea0b6d58-33e1-488e-a549-552c23c8f7f3",
												"exec": [
													"pm.test(\"C2954130 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4e201c8a-a004-46cc-9831-fd931e6c3685",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1384d140-dd50-4a98-b11f-74664ce8bcf2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3da9ae9c-1c23-408c-b485-b43a60e0df7a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Agent Monologues",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1b44e893-4bc0-4534-be51-0bf5cbb50c8c",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ada72832-2cef-448f-a584-acf8c19531a1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-agent-monologues-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-agent-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "52a26399-2020-4aa9-8776-f4283e95ef66",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "76f98a87-92de-4951-9379-21878fd639f4",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2c0bba63-e780-4843-afa6-002ed5516368",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "18e03f15-2068-4303-8c5a-3d7ced128d6a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=etiquette-agent-monologues-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-agent-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "da0c6483-00c5-4323-9ba4-832b8c10c458",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C2954135 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d9c048f2-5522-491a-96bf-58c23619206b",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c090bab-6db2-45ee-958a-9770a4e93cdb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "77ea83b0-4188-4f96-8166-909dfdb51904",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&createdAt=past7days%7E&name=etiquette-agent-monologues-org&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "name",
													"value": "etiquette-agent-monologues-org"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f8c51034-63d8-4ede-b8fb-1454c11a7837",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954136 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "75d8ffe5-aa8f-4bbf-bc4e-ad71b96d684f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "002cc780-cc84-4ad2-8df4-7713db943a64",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bac23595-16b0-4462-bc04-dd552c75115c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=etiquette-agent-monologues-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-agent-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83ccc6cd-638c-45fb-b581-5b3611814260",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954137 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d69da5dd-a71f-41f5-86df-981dbea5cf8f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API ",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a530b494-1deb-40e4-8f6a-755e0cfe74cc",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bc6d1a22-841d-4fa9-b4c0-3e45b808504b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=etiquette-agent-monologues-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "etiquette-agent-monologues-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "qweeq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "52393e80-04b1-45c0-9a6b-23dde0451cf1",
												"exec": [
													"pm.test(\"C2954134 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f091a24e-5b2e-44ea-a496-8c2ffec811cd",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2b310be8-d818-4b16-a6e9-b04bc62f37ba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "da99d07c-9f07-4959-9df3-2d505ab4106c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Activity Metrics",
			"item": [
				{
					"name": "Calling Productivity",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "aa965a42-093f-45f3-869a-cf6122b4312a",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a78f5cc5-3f09-4c81-9c55-5ffcd4e1d42a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-calling-productivity-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-calling-productivity-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "25bb333d-0001-4537-b0ce-1afdbd35cb58",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e63c3dd9-12b9-41d7-bb65-595a2b577877",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "34f9a8c2-137e-4403-8883-f196ae1c3b36",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e72f0a46-7f3a-4c0f-80d2-d554102d5778",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-calling-productivity-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-calling-productivity-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ebe20ec9-e026-4c10-8b51-be40d735c337",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "05ece5bf-7646-4856-8089-03aabb1bd7cf",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C2954151 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "de974ef7-c437-4589-a911-e822f6796131",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "79ed8c99-6eb0-4d8b-83b8-5d05ed5a0cd5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-calling-productivity-org&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-calling-productivity-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6f8d2ced-2ebc-44fe-806a-669625a3a74b",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954152 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e5aadaed-6403-4198-8526-519116453b86",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2dceb1ae-8533-4598-b410-a33f7e8a9341",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "82354921-5826-4f8c-80ab-1648288a4121",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "sessionId",
												"value": "{{sessionID}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-calling-productivity-org&createdAt=past7days%7E&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-calling-productivity-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ee283a69-591d-4433-9a3d-5bec10605852",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954153 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1407ac3d-7cfb-4296-b5a3-807501ec9587",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4d826c0f-c63c-445d-a1a2-119f1a378356",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "04fd5e11-6ea5-453b-91f3-d720df958b94",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&callContext=%25&managementLevel=%25&name=activity-calling-productivity-org&createdAt=past7days%7E&accountId={{invalidAccountId}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-calling-productivity-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "qweeq",
													"disabled": true
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "772b14bf-5e33-424e-8f6f-6bd75fff5388",
												"exec": [
													"pm.test(\"C2954150 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2ba32779-c256-454e-960c-28334949ec92",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "782e5d2a-1d87-42e7-b118-ebf19bff9020",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cdd84d90-c757-4dfa-b9da-5edce3ad57d6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Talk Time",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "47b8e649-f36d-486f-a7a8-2ccb8377b731",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1fd64aef-61e0-43c5-8b46-e208979249c1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-talk-time-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-talk-time-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a6b95a03-5316-4e0b-a49f-928397eddd83",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "062bfd93-6a0e-4f25-ad6c-7e9583e1f81b",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8ea46697-1834-4cb6-b447-838ba034f62d",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0582428e-b1a2-4a8d-8b04-66cce08acb45",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-talk-time-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-talk-time-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2654f5dd-c763-4c5a-b4d4-628b248cef33",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C2954155 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ac60462e-8939-44a0-ba4f-57e6899d61d7",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "816273cd-1e71-4eb8-8041-fb84573c8160",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "13bc2f27-f9be-4f79-8357-6726a8f8d904",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-talk-time-org&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-talk-time-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "agentName",
													"value": "%",
													"disabled": true
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ec48b81a-b52d-47c5-8987-852c75d40fb8",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C2954156 Pass incorrect TeamName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "74a05931-4fe9-4d16-b31b-ef8277e73316",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "24941e47-f910-41e5-8692-61b7fed9b483",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d97a0e67-9f98-4221-8502-85f3c18bf83e",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-talk-time-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-talk-time-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13969937-04cd-4ca5-9ef1-abc448ab9ea5",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"   pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"",
													"pm.test(\"C2954157 Pass Incorrect Location value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6925111d-2fdc-4c83-8475-b45ce42f5c66",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8111e3cc-53f8-41a4-8351-6b821b4f46ac",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8cb9d713-ad14-4974-a585-c9a27eb83fb2",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=activity-talk-time-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-talk-time-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37f10fbc-3c9e-4c09-8f23-3fa2730ba344",
												"exec": [
													"pm.test(\"C2954154 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "869cfbcf-002e-4c72-aa28-fc0e2eb04874",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Time of Day",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "09b0fb77-7b05-4017-acf0-0613005d745f",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c91eef01-26b7-4ed3-ad5c-e7ada04ff092",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-time-day&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-time-day"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d0ab81f-8f3d-4fc3-a2f9-c7497d487095",
												"exec": [
													"pm.test(\"C2954163 Pass Incorrect Username value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[6].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "15b0f098-9a34-41df-9909-53f9285390ac",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"console.log (\"reportsidurlurlurl \" + url);",
													"",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "applicaton/json; charset=utf-8",
												"type": "text"
											},
											{
												"key": "X-Metabase-Embedded",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Cache-Control",
												"value": "max-age=0, no-cache, must-revalidate, proxy-revalidate",
												"type": "text"
											},
											{
												"key": "Connection",
												"value": "keep-alive",
												"type": "text"
											},
											{
												"key": "Content-Security-Policy",
												"value": "default-src 'none'; script-src 'self' 'unsafe-eval' https://maps.google.com https://apis.google.com https://www.google-analytics.com https://*.googleapis.com *.gstatic.com  'sha256-lMAh4yjVuDkQ9NqkK4H+YHUga+anpFs5JAuj/uZh0Rs=' 'sha256-sMNbXyc1lLzhHbH/CKs11HIQMnMkZAN2eA99WhJeEC0=' 'sha256-JJa56hyDfUbgNfq+0nq6Qs866JKgZ/+qCq2pkDJED8k='; child-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'; font-src 'self' ; img-src * 'self' data:; connect-src 'self' metabase.us10.list-manage.com ; manifest-src 'self';",
												"type": "text"
											},
											{
												"key": "Date",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Expires",
												"value": "Tue, 03 Jul 2001 06:00:00 GMT",
												"type": "text"
											},
											{
												"key": "Last-Modified",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Server",
												"value": "Jetty(9.4.27.v20200227)",
												"type": "text"
											},
											{
												"key": "Strict-Transport-Security",
												"value": "max-age=31536000",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											],
											"query": [
												{
													"key": "Cookie",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a199fd77-b2d0-4673-b67b-2b0c3fe7c8eb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "97a24728-3ee7-47b2-a823-408e90639e69",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%&callContext=%25&managementLevel=%25&name=activity-time-day&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}&locationName%5B%5D=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-time-day"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8daa7608-c1d3-42fb-96d9-06638783e0ff",
												"exec": [
													"pm.test(\"C2954164 Pass Incorrect teamName value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[5].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "dea7ee8e-07b6-4a49-819a-d6f99fc0f7ce",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0f4049dc-defa-4afb-aa79-dc70ddb726b7",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46ebb468-7bf3-45fe-a13e-90ce448b9ed3",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-time-day&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}&agentName=Deepanker+Acharya",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-time-day"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b44df19-813c-4606-9d9b-ed152579c1c7",
												"exec": [
													"pm.test(\"C2954165 Pass Incorrect Location value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[4].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3945950c-4ae5-4891-914c-5f003f94f5df",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "990b34fd-bf70-45a8-b061-d15cb401776b",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3e575b81-f0cb-439e-9843-f412483c00d4",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=activity-time-day&createdAt=past7days%7E&agentName=Deepanker+Acharya&locationName%5B%5D=%25&teamName%5B%5D=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-time-day"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e92e2e5-2c9e-4f38-bbe3-74f4be08da0e",
												"exec": [
													"pm.test(\"C2954162 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "29a71e85-bb78-409a-a1ca-50adddbf8af2",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d40cb221-d14c-4c17-9f93-99a614c1d352",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "79162d69-adf6-493e-b815-a61e22e82f58",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dispositions",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "659f5a55-d726-4dd3-a66e-6b9df435a1ce",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0de154a4-d61d-434c-b37f-2491a4c9ecdf",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-dispositions-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-dispositions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c4f24ac-c041-47fe-b495-deaef00491e4",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C3121950 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fcd037dc-939d-4c98-b254-140e29c3d0f1",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"console.log (\"reportsidurlurlurl \" + url);",
													"",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "applicaton/json; charset=utf-8",
												"type": "text"
											},
											{
												"key": "X-Metabase-Embedded",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Cache-Control",
												"value": "max-age=0, no-cache, must-revalidate, proxy-revalidate",
												"type": "text"
											},
											{
												"key": "Connection",
												"value": "keep-alive",
												"type": "text"
											},
											{
												"key": "Content-Security-Policy",
												"value": "default-src 'none'; script-src 'self' 'unsafe-eval' https://maps.google.com https://apis.google.com https://www.google-analytics.com https://*.googleapis.com *.gstatic.com  'sha256-lMAh4yjVuDkQ9NqkK4H+YHUga+anpFs5JAuj/uZh0Rs=' 'sha256-sMNbXyc1lLzhHbH/CKs11HIQMnMkZAN2eA99WhJeEC0=' 'sha256-JJa56hyDfUbgNfq+0nq6Qs866JKgZ/+qCq2pkDJED8k='; child-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'; font-src 'self' ; img-src * 'self' data:; connect-src 'self' metabase.us10.list-manage.com ; manifest-src 'self';",
												"type": "text"
											},
											{
												"key": "Date",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Expires",
												"value": "Tue, 03 Jul 2001 06:00:00 GMT",
												"type": "text"
											},
											{
												"key": "Last-Modified",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Server",
												"value": "Jetty(9.4.27.v20200227)",
												"type": "text"
											},
											{
												"key": "Strict-Transport-Security",
												"value": "max-age=31536000",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											],
											"query": [
												{
													"key": "Cookie",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9b7bc632-7dd9-4132-9128-c64c2f079228",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "00ce9280-be66-4330-bedd-5be779d571c8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-dispositions-org&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-dispositions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "agentName",
													"value": "%",
													"disabled": true
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ce00073-3fd6-4aa3-9415-c7456e255d97",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C3121952 Pass Incorrect Teamname value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "eff1fa82-e20e-4657-b5c8-80a0c2d0f3c0",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "feb6763f-367f-4eb4-802f-f926ea6491fa",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27951c77-84a9-452f-b0f6-6da8cb525336",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-dispositions-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}&agentName=Deepanker+Acharya",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-dispositions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14b00589-f8f8-4fe1-a0ee-c61be8bdcfc4",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"pm.test(\"C3121951 Pass Incorrect location_name value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "77b96fb8-6093-4000-b5af-d6077f115fcc",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1e788df5-8db3-4373-b0c0-c2e371dcbb6a",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a934a4c6-7588-44ba-b775-da796d8ea278",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=activity-dispositions-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-dispositions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "784fd228-d884-40d6-b13f-d05436a23311",
												"exec": [
													"pm.test(\"C2954166 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9a39447c-43c2-48da-8075-0bdeae3ce3d8",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7afc66eb-df9b-4294-b69e-93e0c852da48",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4df04e63-ffc1-4627-aba3-986fff8ecbac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Call Directions",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5c0965e5-d621-47ab-82de-45bc350c1039",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4147a0c5-602d-4966-8d2e-114c5d1534fc",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-call-directions-org&createdAt=past7days%7E&teamName%5B%5D=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-call-directions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2569972e-3e00-48a1-aaf6-199b6ed687be",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C3121957 Pass Incorrect UserName value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "828d55f6-d472-4ca5-898f-3e74418a46db",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"console.log (\"reportsidurlurlurl \" + url);",
													"",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "applicaton/json; charset=utf-8",
												"type": "text"
											},
											{
												"key": "X-Metabase-Embedded",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Cache-Control",
												"value": "max-age=0, no-cache, must-revalidate, proxy-revalidate",
												"type": "text"
											},
											{
												"key": "Connection",
												"value": "keep-alive",
												"type": "text"
											},
											{
												"key": "Content-Security-Policy",
												"value": "default-src 'none'; script-src 'self' 'unsafe-eval' https://maps.google.com https://apis.google.com https://www.google-analytics.com https://*.googleapis.com *.gstatic.com  'sha256-lMAh4yjVuDkQ9NqkK4H+YHUga+anpFs5JAuj/uZh0Rs=' 'sha256-sMNbXyc1lLzhHbH/CKs11HIQMnMkZAN2eA99WhJeEC0=' 'sha256-JJa56hyDfUbgNfq+0nq6Qs866JKgZ/+qCq2pkDJED8k='; child-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'; font-src 'self' ; img-src * 'self' data:; connect-src 'self' metabase.us10.list-manage.com ; manifest-src 'self';",
												"type": "text"
											},
											{
												"key": "Date",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Expires",
												"value": "Tue, 03 Jul 2001 06:00:00 GMT",
												"type": "text"
											},
											{
												"key": "Last-Modified",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Server",
												"value": "Jetty(9.4.27.v20200227)",
												"type": "text"
											},
											{
												"key": "Strict-Transport-Security",
												"value": "max-age=31536000",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											],
											"query": [
												{
													"key": "Cookie",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6256eb22-f12f-410d-b9a3-a43957d4c1ef",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "daf9f237-e715-493b-87ec-594def4a1e41",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-call-directions-org&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-call-directions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "agentName",
													"value": "%",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae6e7445-be90-4693-b93f-e455a96a14f1",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C3121958 Pass Incorrect Teamname value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8b831d27-c663-42a1-9210-696f2885d096",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "92bbcd4c-85f0-485d-8220-c27f770c23fb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "710ae8e6-2399-4751-b80d-19bd38e7d3cb",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-call-directions-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}&agentName=Deepanker+Acharya",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-call-directions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d6722f35-5d18-48c0-a28a-6a8476be493f",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"pm.test(\"C3121956 Pass Incorrect location_name value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "215a788a-fd5f-4ca5-8009-6d75f8ea73bd",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4db3ecc0-de46-42f8-a993-56ea5b83f582",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f824b507-9010-40cd-b85a-83c1416e64e2",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=activity-call-directions-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-call-directions-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c9fa1267-e1f1-4e48-a224-bf04dbe30fb8",
												"exec": [
													"pm.test(\"C2954170 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1ace92a8-be67-46c0-a474-efed73dc6604",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2f9530a8-7e66-4a84-9437-36d6e4880865",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b149574d-e5d9-4c48-b926-b9377d07ecfd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Local Presence",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5153f7aa-eafe-43b7-8d29-fddbd4b96678",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bfdb6a22-e175-4fea-8557-e506a9eaac4c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-local-presence-org&createdAt=past7days%7E&teamName%5B%5D=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-local-presence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49e271f7-9020-4535-ae03-d0be920af5e9",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C3158743 Pass Incorrect UserName value with Correct Agentname value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ced4170f-cfa6-4a44-85ff-c01fbd970654",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"console.log (\"reportsidurlurlurl \" + url);",
													"",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "applicaton/json; charset=utf-8",
												"type": "text"
											},
											{
												"key": "X-Metabase-Embedded",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Cache-Control",
												"value": "max-age=0, no-cache, must-revalidate, proxy-revalidate",
												"type": "text"
											},
											{
												"key": "Connection",
												"value": "keep-alive",
												"type": "text"
											},
											{
												"key": "Content-Security-Policy",
												"value": "default-src 'none'; script-src 'self' 'unsafe-eval' https://maps.google.com https://apis.google.com https://www.google-analytics.com https://*.googleapis.com *.gstatic.com  'sha256-lMAh4yjVuDkQ9NqkK4H+YHUga+anpFs5JAuj/uZh0Rs=' 'sha256-sMNbXyc1lLzhHbH/CKs11HIQMnMkZAN2eA99WhJeEC0=' 'sha256-JJa56hyDfUbgNfq+0nq6Qs866JKgZ/+qCq2pkDJED8k='; child-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'; font-src 'self' ; img-src * 'self' data:; connect-src 'self' metabase.us10.list-manage.com ; manifest-src 'self';",
												"type": "text"
											},
											{
												"key": "Date",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Expires",
												"value": "Tue, 03 Jul 2001 06:00:00 GMT",
												"type": "text"
											},
											{
												"key": "Last-Modified",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Server",
												"value": "Jetty(9.4.27.v20200227)",
												"type": "text"
											},
											{
												"key": "Strict-Transport-Security",
												"value": "max-age=31536000",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											],
											"query": [
												{
													"key": "Cookie",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "04a22b14-7aa5-4476-a7d0-60d2baaed64a",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6fa52cbd-1280-4651-9fcb-ee549c3b0972",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-local-presence-org&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}&locationName%5B%5D=%25&agentName=Deepanker+Acharya",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-local-presence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26aa82ab-8bf1-401a-84b7-261de7c2f9be",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"pm.test(\"C3158742 Pass Incorrect Team name value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bb1809d8-dbe1-459d-9cc0-620a38d14982",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a86f4e0b-f3be-4619-bb46-3abb275de2a0",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e2915b78-7e69-4202-8f4b-4284a665319e",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-local-presence-org&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}&agentName=Deepanker+Acharya",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-local-presence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb818a51-f725-44d1-a197-62f12e775cb0",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"pm.test(\"C3158744 Pass Incorrect location_name value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "487a472b-92a1-4508-b390-8349e9038c50",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f9026730-a652-41f1-af78-e3e01c42deb4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d1ee0470-087b-44c9-a19f-7c3aff09fcd0",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=activity-local-presence-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-local-presence-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08a284d1-e12d-4023-b01a-d8ab12549dc7",
												"exec": [
													"pm.test(\"C2954174 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ec32f3dc-1c4c-4ffc-9a10-b72ba0831322",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "71da7987-2ae6-46c7-bcac-fcfc638917fc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "511f01aa-6f21-4775-840f-3ce70be5ede5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Recorded Call Percentage",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0011bb9d-f01d-4376-af6a-20b85054ada4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a79676d7-f721-4ef1-a7f4-597596465d56",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%25&managementLevel=%25&name=activity-record-percent-org&createdAt=past7days%7E",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-record-percent-org"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "556cb1fe-5e9c-4cf7-9cb3-38a7d1c91a29",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :agent_name.\");",
													"});",
													"pm.test(\"C3122001 Pass Incorrect UserName value with Correct Agentname value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c66e2f85-4733-49b9-82a8-f1d39cddc46f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"console.log (\"reportsidurlurlurl \" + url);",
													"",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "applicaton/json; charset=utf-8",
												"type": "text"
											},
											{
												"key": "X-Metabase-Embedded",
												"value": "true",
												"type": "text"
											},
											{
												"key": "Cache-Control",
												"value": "max-age=0, no-cache, must-revalidate, proxy-revalidate",
												"type": "text"
											},
											{
												"key": "Connection",
												"value": "keep-alive",
												"type": "text"
											},
											{
												"key": "Content-Security-Policy",
												"value": "default-src 'none'; script-src 'self' 'unsafe-eval' https://maps.google.com https://apis.google.com https://www.google-analytics.com https://*.googleapis.com *.gstatic.com  'sha256-lMAh4yjVuDkQ9NqkK4H+YHUga+anpFs5JAuj/uZh0Rs=' 'sha256-sMNbXyc1lLzhHbH/CKs11HIQMnMkZAN2eA99WhJeEC0=' 'sha256-JJa56hyDfUbgNfq+0nq6Qs866JKgZ/+qCq2pkDJED8k='; child-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'; font-src 'self' ; img-src * 'self' data:; connect-src 'self' metabase.us10.list-manage.com ; manifest-src 'self';",
												"type": "text"
											},
											{
												"key": "Date",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Expires",
												"value": "Tue, 03 Jul 2001 06:00:00 GMT",
												"type": "text"
											},
											{
												"key": "Last-Modified",
												"value": "Mon, 24 Aug 2020 11:00:08 GMT",
												"type": "text"
											},
											{
												"key": "Server",
												"value": "Jetty(9.4.27.v20200227)",
												"type": "text"
											},
											{
												"key": "Strict-Transport-Security",
												"value": "max-age=31536000",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											],
											"query": [
												{
													"key": "Cookie",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "bc9903b2-89f9-4470-b0f7-40e170c965a8",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6793f384-4e79-4307-b46f-59043c0d5775",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-record-percent-agent&createdAt=past7days%7E&teamName%5B%5D={{invalidTeamName}}&agentName=Deepanker+Acharya",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-record-percent-agent"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "agentName",
													"value": "Deepanker+Acharya"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad806333-2af8-47ec-9a64-33ab70c2683c",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :team_name.\");",
													"});",
													"pm.test(\"C3122003 Pass Incorrect team_name value with Correct Team value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3819e1f5-fead-4d1c-8097-c84395a8ee03",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fb172e9a-0d2e-4bed-ab8e-8271f660aa3e",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "38b002d1-b781-40f2-98ff-cc9acf8635e8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&callContext=%25&managementLevel=%25&name=activity-record-percent-agent&createdAt=past7days%7E&teamName%5B%5D=%25&locationName%5B%5D={{invalidLocation}}&agentName=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-record-percent-agent"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25"
												},
												{
													"key": "locationName%5B%5D",
													"value": "{{invalidLocation}}"
												},
												{
													"key": "agentName",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8c7214d-bf88-4576-b168-a2ded9294fc3",
												"exec": [
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Unknown parameter :location_name.\");",
													"});",
													"pm.test(\"C3122002 Pass Incorrect location_name value with Correct Account value\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a93bf58d-7716-490b-b35d-8b3288afb853",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "99b0e6c3-93e6-49b7-840b-2470aaabc1a1",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b8fcadf3-5532-45ea-9283-4b9a6f6d9c96",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&callContext=%25&managementLevel=%25&name=activity-record-percent-agent&createdAt=past7days%7E&agentName=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "callContext",
													"value": "%25"
												},
												{
													"key": "managementLevel",
													"value": "%25"
												},
												{
													"key": "name",
													"value": "activity-record-percent-agent"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "locationName%5B%5D",
													"value": "%25",
													"disabled": true
												},
												{
													"key": "teamName%5B%5D",
													"value": "%25",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "112b9bba-bf98-4323-814e-eb38a9297bb9",
												"exec": [
													"pm.test(\"C2954158 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    console.log (\"finalReportId \" + jsonDataVal);",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6532eb55-7929-44c2-b30e-51e54b542528",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "87d1eadf-6863-4089-bf50-c5bf5740fe0a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fd610656-c0df-4642-a760-1559e4927734",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Keyword Impact",
			"item": [
				{
					"name": "Keyword Impact",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f1c0ae77-26a3-4e99-a589-5fb0926a45fd",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0657afda-b1f7-4775-8e89-351ca029e7c2",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=keyword-impact&createdAt=past7days%7E&keywordGroup=%&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "keyword-impact"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "keywordGroup",
													"value": "%"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ab95b919-8dcf-40a3-ae25-575636334bdb",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "32d30d6a-cbd5-4c30-8be4-46139d360505",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59d2954a-eae3-4931-9f78-38750175e7a9",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4a92ad08-e1eb-4075-95fa-e323da1c756a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=keyword-impact&createdAt=past7days%7E&keywordGroup=%&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "keyword-impact"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "keywordGroup",
													"value": "%"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c907287e-8fc0-4c2d-aa80-7bfdf2c04b7e",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "eeb98221-a6ff-4d0c-b7f1-5411e61de909",
												"exec": [
													"pm.test(\"C2954179 Pass incorrect agentName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[4].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "148b2282-0642-49bd-8d23-8665afa98642",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5f890472-4148-420a-a7f8-7155e14e2265",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=keyword-impact&createdAt=past7days%7E&keywordGroup=%&teamName[]={{invalidTeamName}}&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "keyword-impact"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "keywordGroup",
													"value": "%"
												},
												{
													"key": "teamName[]",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "693e26b5-1500-4c9e-8de6-42818f753822",
												"exec": [
													"pm.test(\"C2954180 Pass incorrect teamName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[6].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "879525cf-176f-46b4-b669-927f5c1ce342",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a6abce1c-0317-4aa1-9f30-c19c1e8e10a8",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cfa10f7a-69b9-4f4d-97b7-37021c4d5c39",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=keyword-impact&createdAt=past7days%7E&keywordGroup=%&teamName[]=%25&locationName[]={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "keyword-impact"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "keywordGroup",
													"value": "%"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e0729f8-44b1-427f-91d5-8f7ee0b5d381",
												"exec": [
													"pm.test(\"C2954181 Pass incorrect Location value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[5].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidLocation\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d907efe7-0392-4cec-820c-a2633f37b0a8",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ac4bb8b1-f006-42f8-8c79-f7e3b6d38adc",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "06ff5534-a3cc-4c5e-8529-90796bfef69c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&agentName=%25&callContext=%&managementLevel=%&name=keyword-impact&createdAt=past7days%7E&keywordGroup=%&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "keyword-impact"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "keywordGroup",
													"value": "%"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c04696c1-1497-4218-8087-3b3c677d40d3",
												"exec": [
													"pm.test(\"C2954178 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c27f9bc5-7931-4f13-bb15-5fe5a1302816",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "99158df2-2eff-4458-8a84-83ca83c7d5ba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d0b3eb8a-a896-4715-af65-030bbcd0f5f9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Coaching Events",
			"item": [
				{
					"name": "Coaching Volume",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "954a3b92-59d5-4782-9411-8226a46b11ab",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "302eec97-89a6-4a3c-9176-7d349ac27a71",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=coaching-volume&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-volume"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a4637255-5439-4667-aed7-5f20be4a7518",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "148aa43f-aea7-4086-9c05-d8f3e6101ed7",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9f4ab650-9363-45e6-8d48-1844aeeb643a",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ef3768a1-c9c2-4a19-adda-da9b64e5d15e",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=coaching-volume&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-volume"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "82ec3db1-3df1-4bfd-aa8b-6a69393dadb3",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "467b95db-2b81-425f-baba-5a9d14b68571",
												"exec": [
													"pm.test(\"C2954183 Pass incorrect agentName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[6].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a16bb763-2815-442c-87d5-827d04fe3458",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4480663c-a9ce-43cb-a478-0952c5901321",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=coaching-volume&createdAt=past7days%7E&teamName[]={{invalidTeamName}}&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-volume"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc6b21ad-baa1-4693-aa92-9f545780c03a",
												"exec": [
													"pm.test(\"C2954184 Pass incorrect teamName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[5].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58b989bb-db2d-4972-9075-b2ddfd07d171",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1c98b65c-d93c-4096-b1e7-fc145c113694",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6c428266-aa0e-4efc-964d-8867619f5714",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=coaching-volume&createdAt=past7days%7E&teamName[]=%25&locationName[]={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-volume"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "02e7f89e-85c7-4a3f-960d-426f8f832249",
												"exec": [
													"pm.test(\"C2954185 Pass incorrect Location value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[4].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidLocation\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cd7e8109-844c-4967-929b-4ed6e7e47f81",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eb5bc310-6740-43f8-a0c0-8499aaf7e9b3",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6e04c2b9-14ff-416b-b12c-6a2cf67f322a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&agentName=%25&callContext=%&managementLevel=%&name=coaching-volume&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-volume"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb0776c6-e17b-45d5-874d-451fa29f321e",
												"exec": [
													"pm.test(\"C2954182 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value[0];",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0199ec4e-be18-47ca-8b67-6d5df7ffe890",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "49254a89-65ec-4bd1-b39e-45c70c2c9642",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fc9bc8-2fe4-403e-8b74-dabf25de95b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Coaching Received",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0ab5cf38-167e-4e05-b947-99e57c4d6c9e",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cfa24e2d-cc16-4418-bcdc-7d05cb099389",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=coaching-received&createdAt=past7days%7E&teamName[]=%&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-received"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "56553d19-dfcb-4d37-a3e5-84c08eae75e3",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "85cdbce4-2317-4f82-9523-34a50b1fb106",
												"exec": [
													"pm.test(\"C2954187 Pass incorrect agentName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[6].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "433895fc-2e45-495c-8c71-00faaf5b4c50",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "118402af-6d7a-4743-8628-4d88ba373034",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%&callContext=%&managementLevel=%&name=coaching-received&createdAt=past7days%7E&teamName[]={{invalidTeamName}}&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-received"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cdd6fc05-7874-45e1-b4d6-5e75228233a3",
												"exec": [
													"pm.test(\"C2954188 Pass incorrect teamName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3dda183d-49ff-4565-90d5-47587fe5ebdf",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "659a17be-39d0-4a80-a327-018e5748dad2",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "11179319-20a9-409b-acc5-e135f3aa4800",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=coaching-received&createdAt=past7days%7E&teamName[]=%25&locationName[]={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-received"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c134cf3f-d66a-40a4-b5f0-cdf9e4d82479",
												"exec": [
													"pm.test(\"C2954189 Pass incorrect Location value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[2].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidLocation\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5d13fd44-6cac-4202-bf78-c9efabc49bd6",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "73287e77-7580-472b-84bf-13fa9f7e782f",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1babf2d1-22eb-4268-8e8e-c52122893d54",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&agentName=%25&callContext=%&managementLevel=%&name=coaching-received&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-received"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "baaffe24-2775-4f00-823d-991852676d50",
												"exec": [
													"pm.test(\"C2954186 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2d3ef79b-0a0a-480c-9f97-9408c7867818",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "36babaef-47ed-4747-a59c-255566b79dc0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "66ebb48f-0434-473e-9adb-5677147315ff",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Coaching Given",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "afb7493f-ef44-4b4f-b532-daf3064b769e",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46407fcf-7db8-4cd2-a8ed-e5eec41709af",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=coaching-given&createdAt=past7days%7E&teamName[]=%&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-given"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8b2b1343-a9b0-440a-9979-26e482c068fb",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6297c684-1597-42f2-ad99-58a5d47daeb7",
												"exec": [
													"pm.test(\"C2954189 Pass incorrect agentName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[6].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7353044d-34f4-474e-93e7-3fff5e613039",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2ba19dba-fb1c-4624-b852-79e7489614eb",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%&callContext=%&managementLevel=%&name=coaching-given&createdAt=past7days%7E&teamName[]={{invalidTeamName}}&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-given"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ffb4463e-e3fb-4f3d-8a07-49e4cdebbdac",
												"exec": [
													"pm.test(\"C2954192 Pass incorrect teamName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9baf2f2e-5257-4c78-ae95-ee7c425b5b79",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9437bebb-575c-4dfc-958e-eda624dc7177",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3f426c6a-f539-4b01-80f3-a65256a2d156",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=coaching-given&createdAt=past7days%7E&teamName[]=%25&locationName[]={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-given"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "840eaf51-6cb2-4d14-a3bc-28716c01d76b",
												"exec": [
													"pm.test(\"C2954193 Pass incorrect Location value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[2].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidLocation\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "42cb8ab2-020f-433c-b8a6-47bc8ea9f1cd",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "afab2871-6ad4-4462-8cf9-762c93ef839f",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7c6c1764-5bec-41cd-9919-19284988e1ff",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&agentName=%25&callContext=%&managementLevel=%&name=coaching-given&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "coaching-given"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "34a8c0c0-e796-4971-80c4-841f479ef104",
												"exec": [
													"pm.test(\"C2954190 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[1].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a00ba5ac-9a3b-4b1c-b77c-ef1d12770133",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "82d17b77-edb9-4aab-8076-231fd984d326",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6df1b7d7-7297-4ba9-82cd-7f76dda88e3b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Peer Coaching",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1b0b63b7-7f0c-45f0-b342-9ab603a8f216",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ced20ca7-6771-452f-9d6e-9297850d034d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=peer-coaching&createdAt=past7days%7E&teamName[]=%&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "peer-coaching"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b71f389a-7368-486f-9136-796170c9027c",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91b7360e-17b2-40af-8227-4520799ee038",
												"exec": [
													"pm.test(\"C2954197 Pass incorrect agentName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[6].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4841a403-a313-4522-8ea7-49df125f1bc9",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1ef38da1-59d4-4aae-b88f-5f260aa527e6",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%&callContext=%&managementLevel=%&name=peer-coaching&createdAt=past7days%7E&teamName[]={{invalidTeamName}}&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "peer-coaching"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e56394ba-a522-4190-91f8-affd48e54533",
												"exec": [
													"pm.test(\"C2954196 Pass incorrect teamName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "37b8b8c3-981a-4955-b178-05bbb5c7e909",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "13088e2a-474d-4e9e-b18f-c9ae94b4492b",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8663a81e-3f3e-406a-bbf3-c399ece67c98",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%&callContext=%&managementLevel=%&name=peer-coaching&createdAt=past7days%7E&teamName[]=%&locationName[]={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "peer-coaching"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d2b5206-0f2e-4779-9a43-7c2e335ab591",
												"exec": [
													"pm.test(\"C2954195 Pass incorrect Location value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[2].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidLocation\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "16f3c9e5-9ee6-4b23-b6f8-5c59775128bc",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fed9919e-8362-4fc0-af81-230cb1e329e0",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "99a59074-6107-4b83-ae4e-888f5eb4a837",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&agentName=%&callContext=%&managementLevel=%&name=peer-coaching&createdAt=past7days%7E&teamName[]=%&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "peer-coaching"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4121438e-9303-414a-ad00-a5736af19878",
												"exec": [
													"pm.test(\"C2954194 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[1].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4c053da0-59e6-459f-8831-b0ed477fa75e",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d114385c-5011-4562-9686-935a16f09563",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4cc88c08-2f1b-4d56-bd94-f07a70d92954",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Self Review",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6c949842-8bda-4491-8ddf-cb5e6fc078eb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2da618ab-5f3d-428c-8b86-9f873a57f099",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=self-review&createdAt=past7days%7E&teamName[]=%&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "self-review"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "42da994d-919a-4209-b8cd-1e963df08eec",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9cd53c28-7bd9-40c8-8f24-54884e86d380",
												"exec": [
													"pm.test(\"C2954147 Pass incorrect agentName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[6].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0b274e73-0209-42d5-87e3-8bee936d18d6",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4cb49fbd-30a0-4d6f-b2c1-84cf98e950e5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%&callContext=%&managementLevel=%&name=self-review&createdAt=past7days%7E&teamName[]={{invalidTeamName}}&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "self-review"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e7518e99-e734-43b9-9e4a-981a8631fb42",
												"exec": [
													"pm.test(\"C2954200 Pass incorrect teamName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "edba45c8-6233-4f59-bdf5-04547d52829f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4846ef60-592a-48c2-a004-3e2510eab305",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7f13f0f8-60b9-4b37-b661-b8774214237e",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%&callContext=%&managementLevel=%&name=self-review&createdAt=past7days%7E&teamName[]=%&locationName[]={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "self-review"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "353c7309-4d0e-4590-b5b9-89c31fb671a0",
												"exec": [
													"pm.test(\"C2954199 Pass incorrect Location value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[2].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidLocation\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4213ff11-1923-4dea-a2fb-f9db9d5d0e47",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8cad66a-527d-40c6-ab8c-3d1e38e72221",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "87e5d98e-8281-4332-a77e-13d07857f517",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForQuestion?sessionId={{sessionID}}&accountId={{invalidAccountId}}&agentName=%&callContext=%&managementLevel=%&name=self-review&createdAt=past7days%7E&teamName[]=%&locationName[]=%",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForQuestion"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "agentName",
													"value": "%"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "self-review"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%"
												},
												{
													"key": "locationName[]",
													"value": "%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af61381b-f755-4343-ac1d-aaa386807143",
												"exec": [
													"pm.test(\"C2954198 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[1].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8bcdf387-70fe-4af5-a32d-4080cd992472",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/card/{{reportURL}}/query",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"card",
												"{{reportURL}}",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "52914704-2f22-4af1-8b4d-8886db8c3f27",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fe8fad76-f0c5-40e1-a2be-61a4fa090ad4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "54739423-63c0-4cd0-8a3b-d6112163c870",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "078f42cf-1ae6-4c73-ba97-c0b0252065ee",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Missed Meeting Opportunities",
			"item": [
				{
					"name": "Missed Meeting Opportunities",
					"item": [
						{
							"name": "User API",
							"item": [
								{
									"name": "Get Invalid UserName Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c89d426a-bfbc-4649-a540-c1fbf3ff11cc",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4eaa1ad2-6792-455c-ba66-521f7b37624d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=missed-meeting-opportunities&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "missed-meeting-opportunities"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get id and Card_id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a938e869-ffcf-4f3a-8dbf-43fd9a4b6bf6",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a74b6557-8271-46e0-92c7-6a482cfeeba3",
												"exec": [
													"var card_Id = pm.response.json().ordered_cards[0].card_id",
													"console.log(card_Id)",
													"pm.environment.set(\"card_Id\",card_Id)",
													"var id = pm.response.json().ordered_cards[0].id",
													"console.log(id)",
													"pm.environment.set(\"id\",id)",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Invalid UserName Response ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b007f64d-2482-441a-a057-689132a9cd53",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3fb316e5-b30d-4cb3-be2c-6e2ee1240cb9",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName={{invalidAgentName}}&callContext=%&managementLevel=%&name=missed-meeting-opportunities&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "{{invalidAgentName}}"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "missed-meeting-opportunities"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Username Test",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3be184fe-bc97-43ea-b7a2-d9c14fcb7cae",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5ab072ca-d6b5-4698-83b6-4b28c8975452",
												"exec": [
													"pm.test(\"C2954203 Pass incorrect agentName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[5].value;",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidAgentName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Team API",
							"item": [
								{
									"name": "Get Invalid Team Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1e375752-1145-4244-b192-4268a70a3de3",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "151d6631-23c2-4c62-b37a-181c938fd5e0",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=missed-meeting-opportunities&createdAt=past7days%7E&teamName[]={{invalidTeamName}}&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "missed-meeting-opportunities"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "{{invalidTeamName}}"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Team Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d1d06622-ed54-42cf-803c-79eafa715e9a",
												"exec": [
													"pm.test(\"C2954205 Pass incorrect teamName value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[2].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidTeamName\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea32e2d8-6f67-4446-ad01-d069ddee7808",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0]; ",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log (\"reportsid \" + reportId);",
													"console.log (\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Location API",
							"item": [
								{
									"name": "Get Invalid Location Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8ffbc89-fc5b-456b-a74b-63bc5dd39707",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21acb17e-3d4c-432b-9cfb-3e42b561d0bd",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{accountNumber}}&agentName=%25&callContext=%&managementLevel=%&name=missed-meeting-opportunities&createdAt=past7days%7E&teamName[]=%25&locationName[]={{invalidLocation}}",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{accountNumber}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "missed-meeting-opportunities"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "{{invalidLocation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Location Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ecaa676-acc3-436e-9ba4-e5a719787810",
												"exec": [
													"pm.test(\"C2954204 Pass incorrect Location value with Correct Account value\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[3].value[0];",
													"    pm.expect(jsonDataVal).to.eql(pm.environment.get(\"invalidLocation\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7625671d-217c-4ac4-a7cd-05ba2802fd7f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Account API",
							"item": [
								{
									"name": "Get Invalid Account Response",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "16799c71-83a4-4f12-b61f-6a6208d49456",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91b4ebee-e0d8-42c5-ac74-1e0c1d559d23",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.globals.set(\"reportURL\", jsonData.iframeUrl);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Url}}/api/v2/app/reports/urlForDashboard?sessionId={{sessionID}}&accountId={{invalidAccountId}}&agentName=%25&callContext=%&managementLevel=%&name=missed-meeting-opportunities&createdAt=past7days%7E&teamName[]=%25&locationName[]=%25",
											"host": [
												"{{Url}}"
											],
											"path": [
												"api",
												"v2",
												"app",
												"reports",
												"urlForDashboard"
											],
											"query": [
												{
													"key": "sessionId",
													"value": "{{sessionID}}"
												},
												{
													"key": "accountId",
													"value": "{{invalidAccountId}}"
												},
												{
													"key": "agentName",
													"value": "%25"
												},
												{
													"key": "callContext",
													"value": "%"
												},
												{
													"key": "managementLevel",
													"value": "%"
												},
												{
													"key": "name",
													"value": "missed-meeting-opportunities"
												},
												{
													"key": "createdAt",
													"value": "past7days%7E"
												},
												{
													"key": "teamName[]",
													"value": "%25"
												},
												{
													"key": "locationName[]",
													"value": "%25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Invalid Account Test",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "907df08f-61ff-4285-b8b4-b182897a6d82",
												"exec": [
													"pm.test(\"C2954202 Pass Incorrect Account value and verify\", function () ",
													"{",
													"    pm.response.to.have.status(202);",
													"    var jsonDataVal = pm.response.json().json_query.parameters[0].value;",
													"    pm.expect(jsonDataVal).to.not.eql(pm.environment.get(\"invalidAccountId\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2b830cac-b013-4fc4-b34b-89216a2b451f",
												"exec": [
													"var url = pm.globals.get(\"reportURL\");",
													"var reportId = url.split('/')[5];",
													"var finalReportId = reportId.split('#')[0];",
													"",
													"pm.globals.set(\"reportURL\", finalReportId);",
													"",
													"console.log(\"reportsid \" + reportId);",
													"console.log(\"finalReportId \" + finalReportId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{metabaseUrl}}/api/embed/dashboard/{{reportURL}}/dashcard/{{id}}/card/{{card_Id}}",
											"host": [
												"{{metabaseUrl}}"
											],
											"path": [
												"api",
												"embed",
												"dashboard",
												"{{reportURL}}",
												"dashcard",
												"{{id}}",
												"card",
												"{{card_Id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "33aa3dd3-dedd-47bc-a51d-7bcc61e95b2f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7671d754-dba0-405a-8b6b-30d78be4bdeb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5822d090-cb10-42ae-8e1a-572a10d466a2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0b03bea8-8f2c-4e8e-b474-5db98bbce34e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "da3300c1-fdb4-43d7-b265-0d8ce7ad7195",
			"key": "sessionID",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}